services:
    cache:
        image: redis:6.2-alpine
        restart: always
        ports:
            - '6379:6379'
        command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
        volumes: 
            - /opt/applications/data_persistence/database/cache:/data
        environment:
            - REDIS_HOST=cache
            - REDIS_PORT=6379
            - REDIS_PASSWORD=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    db:
        image: postgres:latest
        container_name: db_fdme
        restart: always
        ports:
            - "5432:5432"
        volumes:
            - /opt/applications/data_persistence/database/db:/var/lib/postgresql/data
        environment:
            - POSTGRES_HOST=db
            - POSTGRES_PORT=5432
            - POSTGRES_DB=fdme
            - POSTGRES_USER=fdme
            - POSTGRES_PASSWORD=fdme
            - POSTGRES_HOST_AUTH_METHOD=md5
            - POSTGRES_INITDB_ARGS=--auth-host=md5
    api:
        build: .
        container_name: api_fdme
        restart: "on-failure"
        command: python manage.py runserver 0.0.0.0:8000
        volumes:
            - .:/application
        depends_on:
            - db
            - rabbitmq
        links:
            - db
            - rabbitmq
        ports:
            - "8000:8000"
        environment:
            - SECRET_KEY=123asd123
    # celery:
    #     container_name: celery
    #     build:
    #         context: .
    #         dockerfile: Dockerfile
    #     volumes:
    #         - /opt/applications/data_persistence/database/works:/application
    #     depends_on:
    #         - rabbitmq
    #     command: celery -A core worker --loglevel=info