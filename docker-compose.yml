services:
    rabbitmq:
        image: "rabbitmq:3-management"
        container_name: "queue_fdme"
        env_file: .env
        ports:
            - "15672:15672"
            - "5672:5672"
   
    cache:
        image: redis:6.2-alpine
        restart: always
        env_file: .env
        ports:
            - '6379:6379'
        command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
        volumes: 
            - /opt/applications/data_persistence/database/cache:/data
    db:
        image: postgres:latest
        container_name: db_fdme
        env_file: .env
        restart: always
        ports:
            - "5432:5432"
        volumes:
            - /opt/applications/data_persistence/database/db:/var/lib/postgresql/data
    api:
        build: .
        container_name: api_fdme
        env_file: .env
        restart: "on-failure"
        command: python manage.py celery -A core worker -B -l info --detach & python manage.py runserver 0.0.0.0:8000
        volumes:
            - .:/application
        depends_on:
            - db
        links:
            - db
        ports:
            - "8000:8000"
    dev_container:
        build: .
        container_name: app_fdme
        env_file: .env
        command: python manage.py celery -A core worker -B -l info --detach
        volumes:
            - .:/application
        depends_on:
            - db
        links:
            - db
        expose:
            - "8080"