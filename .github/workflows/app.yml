name: Docker Compose CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Secrets and Environment Variables
        run: |
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
          echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> $GITHUB_ENV
          echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> $GITHUB_ENV
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> $GITHUB_ENV
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> $GITHUB_ENV
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> $GITHUB_ENV
          echo "POSTGRES_HOST_AUTH_METHOD=${{ secrets.POSTGRES_HOST_AUTH_METHOD }}" >> $GITHUB_ENV
          echo "POSTGRES_INITDB_ARGS=${{ secrets.POSTGRES_INITDB_ARGS }}" >> $GITHUB_ENV
          echo "CELERY_BROKER_URL=${{ secrets.CELERY_BROKER_URL }}" >> $GITHUB_ENV
          echo "CELERY_ENABLE_UTC=${{ secrets.CELERY_ENABLE_UTC }}" >> $GITHUB_ENV
          echo "CELERY_DEFAULT_RETRY_DELAY=${{ secrets.CELERY_DEFAULT_RETRY_DELAY }}" >> $GITHUB_ENV
          echo "CELERY_DEFAULT_ASYNC_DELAY=${{ secrets.CELERY_DEFAULT_ASYNC_DELAY }}" >> $GITHUB_ENV
          echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> $GITHUB_ENV
          echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> $GITHUB_ENV
          echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> $GITHUB_ENV

      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli curl -y
          sudo curl -SL https://github.com/docker/compose/releases/download/v2.26.1/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose
          sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose

      - name: Build and push Docker image
        run: |
          docker-compose -f github_actions.yml build
          docker-compose -f github_actions.yml push

      - name: Deploy with Docker Compose & Executing Tests
        run: |
          docker-compose -f github_actions.yml down
          docker-compose -f github_actions.yml up -d
          docker-compose exec api python manage.py test
